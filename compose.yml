services:
  app:
    build: .
    labels:
      - 'tsdproxy.enable=${TSDPROXY_ENABLE}'
      - 'tsdproxy.name=${TSDPROXY_NAME}'
      - 'tsdproxy.funnel=${TSDPROXY_FUNNEL}'
      - 'tsdproxy.proxyprovider=${TSDPROXY_PROVIDER}'
      - 'tsdproxy.ephemeral=${TSDPROXY_EPHEMERAL}'
    # ports:
    #   - '${DOCKER_PORT}:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL:-"postgresql://postgres:password@db:5432/postgres"}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CLIENT_URL=${CLIENT_URL}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - tsdproxy_network

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT:-5432}:5432'

volumes:
  postgres_data:

networks:
  tsdproxy_network:
    external: true
